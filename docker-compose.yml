version: '3'

networks:
  laravel:

services:
  web:
    image: nginx:stable-alpine
    container_name: nginx_weather_app
    ports:
      - "8097:80"
    volumes:
      - .:/var/www/html
      - ./docker/web/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
    networks:
      - laravel

  mysql:
    platform: linux/amd64
    image: mysql:8.0.25
    container_name: mysql_weather_app
    restart: unless-stopped
    ports:
      - "3320:3306"
    volumes:
      - ./docker/mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      MYSQL_DATABASE: weather_app
      MYSQL_USER: weather_app
      MYSQL_PASSWORD: weather_app
      MYSQL_ROOT_PASSWORD: weather_app
    networks:
      - laravel

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: php_weather_app
    volumes:
    - .:/var/www/html
    ports:
    - "9004:9000"
    networks:
      - laravel

  artisan:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: artisan_weather_app
    volumes:
      - .:/var/www/html
    depends_on:
      - mysql
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

  npm:
    image: node:current-alpine
    container_name: npm_weather_app
    volumes:
    - .:/var/www/html
    ports:
        - "3001:3000"
        - "3002:3001"
        - "5174:5173"
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - laravel

  composer:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    volumes:
    - .:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]
    networks:
      - laravel
